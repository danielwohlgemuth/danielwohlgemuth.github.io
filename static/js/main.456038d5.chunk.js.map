{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Components/About.js","Components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","navListDisplayFlex","display","alignContent","linkText","textDecoration","textTransform","color","Navbar","classes","AppBar","position","Box","justifyContent","Toolbar","List","className","to","ListItem","button","ListItemText","primary","title","paddingTop","description","paddingBottom","paddingLeft","paddingRight","root","height","card","details","flexDirection","imageContainer","marginTop","marginBottom","image","width","objectFit","projects","name","url","Home","Typography","variant","align","Container","maxWidth","Grid","container","spacing","map","project","item","xs","md","lg","p","href","Card","raised","CardMedia","component","CardContent","content","textAlign","About","mt","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.456038d5.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Box,\n  Toolbar,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  navListDisplayFlex: {\n    display: `flex`,\n    alignContent: `center`,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`,\n  },\n});\n\nfunction Navbar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Box display=\"flex\" justifyContent=\"center\">\n        <Toolbar>\n          <List className={classes.navListDisplayFlex}>\n            <Link to=\"/\" className={classes.linkText}>\n              <ListItem button>\n                <ListItemText primary=\"Home\" />\n              </ListItem>\n            </Link>\n            <NavLink to=\"/about\" className={classes.linkText}>\n              <ListItem button>\n                <ListItemText primary=\"About\" />\n              </ListItem>\n            </NavLink>\n          </List>\n        </Toolbar>\n      </Box>\n    </AppBar>\n  );\n}\n\nexport default Navbar;\n","import {\n  Typography,\n  Container,\n  makeStyles,\n  Grid,\n  Card,\n  CardContent,\n  CardMedia,\n  Box,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  title: {\n    paddingTop: \"20px\",\n  },\n  description: {\n    paddingTop: \"20px\",\n    paddingBottom: \"20px\",\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n  },\n  root: {\n    height: \"100%\",\n  },\n  card: {\n    display: \"flex\",\n    height: \"100%\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  linkText: {\n    textDecoration: `none`,\n  },\n  imageContainer: {\n    marginTop: \"auto\",\n    marginBottom: \"auto\",\n  },\n  image: {\n    height: 150,\n    width: 150,\n    objectFit: \"contain\",\n  },\n});\n\nconst projects = [\n  {\n    name:\n      \"Utility to find out if an IPv4 address is contained in an IPv4 address range\",\n    url: \"/projects/ip-in-subnet-list\",\n    image: \"ip-in-subnet-list.png\",\n  },\n  {\n    name: \"Identicon generator using SVG\",\n    url: \"/projects/svg-identicon\",\n    image: \"svg-identicon-generator.png\",\n  },\n  {\n    name: \"Visual representation for a few fuzzy logic operators\",\n    url: \"https://github.com/danielwohlgemuth/fuzzy-operators-visualization\",\n    image: \"fuzzy-logic.png\",\n  },\n  {\n    name: \"Send sensor data and visualize it with Grafana\",\n    url: \"https://github.com/danielwohlgemuth/sensor2graph-micropython-esp32\",\n    image: \"sensor-to-graph.png\",\n  },\n  {\n    name: \"Visualize house prices in Kibana\",\n    url: \"https://github.com/danielwohlgemuth/visualize-house-prices-in-kibana\",\n    image: \"visualize-house-prices-in-kibana.png\",\n  },\n];\n\nfunction Home() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"h4\" align=\"center\" className={classes.title}>\n        Projects\n      </Typography>\n\n      <Typography\n        variant=\"body1\"\n        align=\"center\"\n        className={classes.description}\n      >\n        Different projects that I've been working on to try out ideas or\n        technologies.\n      </Typography>\n\n      <Container maxWidth=\"lg\">\n        <Grid container spacing={3}>\n          {projects.map((project) => (\n            <Grid item xs={12} md={6} lg={4} key={project.url}>\n              <Box p={1} className={classes.root}>\n                <a href={project.url} className={classes.linkText}>\n                  <Card className={classes.card} raised={true}>\n                    <div className={classes.imageContainer}>\n                      <CardMedia\n                        className={classes.image}\n                        image={\"/images/\" + project.image}\n                        component=\"img\"\n                        title={project.name}\n                      />\n                    </div>\n                    <div className={classes.details}>\n                      <CardContent className={classes.content}>\n                        <Typography variant=\"h6\">{project.name}</Typography>\n                      </CardContent>\n                    </div>\n                  </Card>\n                </a>\n              </Box>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n    </>\n  );\n}\n\nexport default Home;\n","import { Box, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n  },\n});\n\nfunction About() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.root} mt={5}>\n        <section>\n          <Typography variant=\"body1\">Hi, I'm Daniel Wohlgemuth.</Typography>\n        </section>\n        <section>\n          <Typography variant=\"body1\">\n            You can find me on{\" \"}\n            <a href=\"https://www.linkedin.com/in/daniel-wohlgemuth-6982291ba/\">\n              LinkedIn\n            </a>{\" \"}\n            and <a href=\"https://github.com/danielwohlgemuth\">GitHub</a>.\n          </Typography>\n        </section>\n      </Box>\n    </>\n  );\n}\n\nexport default About;\n","import Navbar from \"./Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <main>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}