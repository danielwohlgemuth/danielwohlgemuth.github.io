{"version":3,"sources":["Components/Navbar.js","Components/Home.js","Components/About.js","Components/App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","navListDisplayFlex","display","justifyContent","alignContent","linkText","textDecoration","textTransform","color","Navbar","classes","AppBar","position","Toolbar","List","className","to","ListItem","button","ListItemText","primary","root","details","flexDirection","cover","height","width","objectFit","projects","name","url","image","Home","Typography","variant","map","project","Box","p","href","Card","CardMedia","component","title","CardContent","content","textAlign","About","mt","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","CssBaseline","document","getElementById"],"mappings":"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","file":"static/js/main.aef116ab.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {\n  AppBar,\n  Toolbar,\n  makeStyles,\n  List,\n  ListItem,\n  ListItemText,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  navListDisplayFlex: {\n    display: `flex`,\n    justifyContent: `space-between`,\n    alignContent: `center`,\n  },\n  linkText: {\n    textDecoration: `none`,\n    textTransform: `uppercase`,\n    color: `white`,\n  },\n});\n\nfunction Navbar() {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Toolbar>\n        <List className={classes.navListDisplayFlex}>\n          <Link to=\"/\" className={classes.linkText}>\n            <ListItem button>\n              <ListItemText primary=\"Home\" />\n            </ListItem>\n          </Link>\n          <NavLink to=\"/about\" className={classes.linkText}>\n            <ListItem button>\n              <ListItemText primary=\"About\" />\n            </ListItem>\n          </NavLink>\n        </List>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nexport default Navbar;\n","import {\n  Typography,\n  List,\n  makeStyles,\n  Card,\n  CardContent,\n  CardMedia,\n  Box,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    display: \"flex\",\n  },\n  details: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n  },\n  linkText: {\n    textDecoration: `none`,\n  },\n  cover: {\n    height: 150,\n    width: 150,\n    objectFit: \"contain\",\n  },\n});\n\nconst projects = [\n  {\n    name:\n      \"Utility to find out if an IPv4 address is contained in an IPv4 address range\",\n    url: \"/projects/ip-in-subnet-list\",\n    image: \"ip-in-subnet-list.png\",\n  },\n  {\n    name: \"Identicon generator using SVG\",\n    url: \"/projects/svg-identicon\",\n    image: \"svg-identicon-generator.png\",\n  },\n  {\n    name: \"Visual representation for some fuzzy logic operators\",\n    url: \"https://github.com/danielwohlgemuth/fuzzy-operators-visualization\",\n    image: \"fuzzy-logic.png\",\n  },\n];\n\nfunction Home() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Typography variant=\"h4\">Projects</Typography>\n\n      <List>\n        {projects.map((project) => (\n          <Box p={1} key={project.url}>\n            <a href={project.url} className={classes.linkText}>\n              <Card className={classes.root}>\n                <CardMedia\n                  className={classes.cover}\n                  image={\"/images/\" + project.image}\n                  component=\"img\"\n                  title={project.name}\n                />\n                <div className={classes.details}>\n                  <CardContent className={classes.content}>\n                    <Typography variant=\"subtitle1\">{project.name}</Typography>\n                  </CardContent>\n                </div>\n              </Card>\n            </a>\n          </Box>\n        ))}\n      </List>\n    </>\n  );\n}\n\nexport default Home;\n","import { Box, Typography, makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles({\n  root: {\n    textAlign: \"center\",\n  },\n});\n\nfunction About() {\n  const classes = useStyles();\n\n  return (\n    <>\n      <Box className={classes.root} mt={5}>\n        <section>\n          <Typography variant=\"body1\">Hi, I'm Daniel Wohlgemuth.</Typography>\n        </section>\n        <section>\n          <Typography variant=\"body1\">\n            You can find me on{\" \"}\n            <a href=\"https://www.linkedin.com/in/daniel-wohlgemuth-6982291ba/\">\n              LinkedIn\n            </a>{\" \"}\n            and <a href=\"https://github.com/danielwohlgemuth\">GitHub</a>.\n          </Typography>\n        </section>\n      </Box>\n    </>\n  );\n}\n\nexport default About;\n","import Navbar from \"./Navbar\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport About from \"./About\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <main>\n        <Switch>\n          <Route path=\"/about\" component={About} />\n          <Route path=\"/\" component={Home} />\n        </Switch>\n      </main>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <CssBaseline />\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}